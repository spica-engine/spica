name: Spica Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Release new version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets:
          - api
          - migrate
          - mongoreplicationcontroller
          - devkit:*
          - cli
          - charts

    steps:
      - name: Free up some space on disk
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Restore Node Modules Cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Disable Nx Cloud
        run: echo "NX_NO_CLOUD=true" >> $GITHUB_ENV

      - name: Set the VERSION
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0

      - name: Install GCP and login
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release Applications
        run: yarn run publish:${{ matrix.targets }}
