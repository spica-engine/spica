{{- if gt (int .Values.database.replicas) 1}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-replication-controller
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/component: database-replication
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: helm
  annotations:
    helm.sh/hook: post-install,post-upgrade
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: replication-controller
          image: {{ .Values.images.replicationcontroller }}:{{ $.Chart.AppVersion }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "50Mi"
              cpu: "50m"
          args: [
            "--from-srv",
            "false",
            "--nodes",
            {{ template "database.nodes" . }},
            "--username",
            "$(USERNAME)",
            "--password",
            "$(PASSWORD)"
          ]
          env:
            - name: ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-root-credentials
                  key: rootUsername
            - name: ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-database-root-credentials
                  key: rootPassword
      {{- if .Values.database.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.database.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.database.tolerations }}
      tolerations:
{{ toYaml .Values.database.tolerations | indent 8 }}
      {{- end }}
{{- end}}