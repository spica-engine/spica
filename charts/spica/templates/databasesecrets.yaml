apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-database-spica-credentials
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
type: Opaque
data:
  spicaUsername: |
    {{- $value := .Values.database.spicaUsername | default "" }}
    {{- $existing := lookup "v1" "Secret" .Release.Namespace (printf "%s-database-spica-credentials" .Release.Name) }}
    {{- if $value }}
      {{ $value | b64enc }}
    {{- else if $existing }}
      {{ $existing.data.spicaUsername }}
    {{- else }}
      {{ "spica" | b64enc }}
    {{- end }}

  spicaPassword: |
    {{- $value := .Values.database.spicaPassword | default "" }}
    {{- $existing := lookup "v1" "Secret" .Release.Namespace (printf "%s-database-spica-credentials" .Release.Name) }}
    {{- if $value }}
      {{ $value | b64enc }}
    {{- else if $existing }}
      {{ $existing.data.spicaPassword }}
    {{- else }}
      {{ include "generatePassword" . | b64enc }}
    {{- end }}

---

apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-database-root-credentials
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
type: Opaque
data:
  rootUsername: |
    {{- $value := .Values.database.rootUsername | default "" }}
    {{- $existing := lookup "v1" "Secret" .Release.Namespace (printf "%s-database-root-credentials" .Release.Name) }}
    {{- if $value }}
      {{ $value | b64enc }}
    {{- else if $existing }}
      {{ $existing.data.rootUsername }}
    {{- else }}
      {{ "root" | b64enc }}
    {{- end }}

  rootPassword: |
    {{- $value := .Values.database.rootPassword | default "" }}
    {{- $existing := lookup "v1" "Secret" .Release.Namespace (printf "%s-database-root-credentials" .Release.Name) }}
    {{- if $value }}
      {{ $value | b64enc }}
    {{- else if $existing }}
      {{ $existing.data.rootPassword }}
    {{- else }}
      {{ include "generatePassword" . | b64enc }}
    {{- end }}

---

apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-database-replica-auth-key
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
type: Opaque
data:
  replicaAuthKey: |
    {{- $value := .Values.database.replicaAuthKey | default "" }}
    {{- $existing := lookup "v1" "Secret" .Release.Namespace (printf "%s-database-replica-auth-key" .Release.Name) }}
    {{- if $value }}
      {{ $value | b64enc }}
    {{- else if $existing }}
      {{ $existing.data.replicaAuthKey }}
    {{- else }}
      {{ randAlphaNum 20 | b64enc }}
    {{- end }}
