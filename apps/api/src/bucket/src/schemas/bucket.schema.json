{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://spica.internal/bucket/schema",
  "required": ["title", "description", "properties"],
  "type": "object",
  "definitions": {
    "propertyNames": {
      "type": "string",
      "pattern": "^(?!(_id)$)([a-z_0-9]*)+$"
    },
    "schemaArray": {
      "type": "array",
      "minItems": 1,
      "items": {"$ref": "#/definitions/schema"}
    },
    "nonNegativeInteger": {
      "type": "integer",
      "minimum": 0
    },
    "nonNegativeIntegerDefault0": {
      "allOf": [{"$ref": "#/definitions/nonNegativeInteger"}, {"default": 0}]
    },
    "simpleTypes": {
      "enum": [
        "array",
        "multiselect",
        "boolean",
        "number",
        "object",
        "string",
        "storage",
        "richtext",
        "date",
        "textarea",
        "color",
        "relation",
        "location",
        "json"
      ]
    },
    "stringArray": {
      "type": "array",
      "items": {"type": "string"},
      "uniqueItems": true,
      "default": []
    },
    "schema": {
      "type": "object",
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "relation"
              }
            }
          },
          "then": {
            "required": ["bucketId", "relationType"],
            "properties": {
              "bucketId": {
                "type": "string",
                "format": "objectid-string"
              },
              "relationType": {
                "type": "string",
                "enum": ["onetoone", "onetomany"]
              },
              "dependent": {
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "location"
              }
            }
          },
          "then": {
            "properties": {
              "locationType": {
                "type": "string",
                "enum": ["Point"],
                "default": "Point"
              }
            }
          }
        }
      ],

      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": true,
        "readOnly": {
          "type": "boolean"
        },
        "examples": {
          "type": "array",
          "items": true
        },
        "maximum": {
          "type": "number"
        },

        "minimum": {
          "type": "number"
        },

        "maxLength": {"$ref": "#/definitions/nonNegativeInteger"},
        "minLength": {"$ref": "#/definitions/nonNegativeIntegerDefault0"},
        "pattern": {
          "type": "string",
          "format": "regex",
          "title": "Regex validation for the value"
        },

        "items": {
          "anyOf": [{"$ref": "#/definitions/schema"}, {"$ref": "#/definitions/schemaArray"}]
        },
        "maxItems": {"$ref": "#/definitions/nonNegativeInteger"},
        "minItems": {"$ref": "#/definitions/nonNegativeIntegerDefault0"},
        "uniqueItems": {
          "type": "boolean"
        },

        "required": {"$ref": "#/definitions/stringArray"},

        "properties": {
          "type": "object",
          "propertyNames": {"$ref": "#/definitions/propertyNames"},
          "minProperties": 1,
          "additionalProperties": {"$ref": "#/definitions/schema"}
        },

        "enum": {
          "type": "array",
          "items": true,
          "minItems": 1,
          "uniqueItems": true
        },

        "type": {"$ref": "#/definitions/simpleTypes"},
        "format": {"type": "string"}
      }
    }
  },

  "properties": {
    "_id": {
      "type": "string",
      "format": "objectid",
      "description": "Unique objectid id of schema."
    },
    "type": {
      "type": "string",
      "const": "object"
    },
    "history": {
      "type": "boolean",
      "default": false,
      "description": "Allows keeping history for each bucket-data"
    },
    "acl": {
      "type": "object",
      "title": "ACL Rule",
      "description": "Definition of the condition that will run before any CRUD operation for bucket-data",
      "required": ["write", "read"],
      "default": {
        "write": "true==true",
        "read": "true==true"
      },
      "properties": {
        "write": {
          "type": "string",
          "description": "Rule that will run for post, put and delete requests"
        },
        "read": {
          "type": "string",
          "description": "Rule that will run for get requests"
        }
      }
    },
    "title": {
      "type": "string",
      "title": "Title of the bucket",
      "description": "Title will appear within the related bucket pages",
      "examples": ["New bucket"],
      "maxLength": 100,
      "minLength": 4
    },
    "description": {
      "type": "string",
      "title": "Description of the bucket",
      "description": "Description will appear within the related bucket pages",
      "examples": ["This bucket will dominate the content world!"],
      "minLength": 5,
      "maxLength": 250
    },
    "icon": {
      "type": "string",
      "title": "The icon of the bucket",
      "description": "The icon will used to represent the bucket whereever representing the bucket wouldn't be possible with title",
      "default": "view_stream",
      "examples": ["offline_bolt"]
    },
    "primary": {
      "type": "string",
      "description": "Specify the primary property of the bucket.",
      "examples": ["title"]
    },
    "order": {
      "type": "number",
      "description": "Specify order of bucket"
    },
    "required": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "description": "Fields that must be existed for bucket-data"
    },
    "readOnly": {
      "type": "boolean",
      "description": "Data of this bucket will not be editable on bucket-data page"
    },
    "category": {
      "type": "string",
      "description": "Category name of this bucket"
    },
    "documentSettings": {
      "type": "object",
      "properties": {
        "countLimit": {
          "type": "number",
          "minimum": 1,
          "description": "Limit value of this bucket can have"
        },
        "limitExceedBehaviour": {
          "type": "string",
          "enum": ["prevent", "remove"],
          "description": "The behavior of the bucket against the data that will be tried to be inserted after the limit is exceeded. 'Prevent' will not accept these kinds of data while 'remove' accepts but removes the oldest data to keep data count in limit"
        }
      },
      "additionalProperties": false
    },
    "properties": {
      "type": "object",
      "propertyNames": {"$ref": "#/definitions/propertyNames"},
      "minProperties": 1,
      "patternProperties": {
        "": {
          "allOf": [
            {"$ref": "#/definitions/schema"},
            {
              "type": "object",
              "properties": {
                "options": {
                  "type": "object",
                  "properties": {
                    "translate": {
                      "type": "boolean",
                      "description": "Allows keeping bucket data in different languages"
                    },
                    "history": {
                      "type": "boolean",
                      "description": "Allows keeping history for each bucket-data"
                    },
                    "position": {
                      "type": "string",
                      "enum": ["left", "right", "bottom"],
                      "description": "Set where will be placed of the field on the bucket-data page"
                    },
                    "unique": {
                      "type": "boolean",
                      "title": "Unique",
                      "description": "If true, each document will have a different value for this field"
                    },
                    "index": {
                      "type": "boolean",
                      "title": "Index",
                      "description": "Whether field will be indexed on the database. Setting this option as 'true' will reduce the query response time but increase the RAM usage."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
